!function e(n,t,o){function a(r,s){if(!t[r]){if(!n[r]){var c="function"==typeof require&&require;if(!s&&c)return c(r,!0);if(i)return i(r,!0);var l=new Error("Cannot find module '"+r+"'");throw l.code="MODULE_NOT_FOUND",l}var m=t[r]={exports:{}};n[r][0].call(m.exports,function(e){var t=n[r][1][e];return a(t?t:e)},m,m.exports,e,n,t,o)}return t[r].exports}for(var i="function"==typeof require&&require,r=0;r<o.length;r++)a(o[r]);return a}({1:[function(e,n,t){"use strict";function o(){function e(){n=window.innerWidth,t=window.innerHeight,i&&(i.setSize(n,t),i.setViewport(0,0,n,t),s.aspect=n/t,s.updateProjectionMatrix())}var n,t;n=window.innerWidth,t=window.innerHeight;var o=Math.min(1.5,window.devicePixelRatio),i=new THREE.WebGLRenderer({canvas:document.getElementById("canvas"),antialias:!0});i.setClearColor(15658734,1),i.setSize(n,t),i.setPixelRatio(o);var r=new THREE.Scene,s=new THREE.PerspectiveCamera(55,n/t,1,1e4);s.position.set(0,1,-3),s.lookAt(new THREE.Vector3);var c=new a(s);return window.addEventListener("resize",e),{renderer:i,scene:r,controls:c,camera:s}}var a=e("three-orbit-controls")(THREE);n.exports=o},{"three-orbit-controls":4}],2:[function(e,n,t){"use strict";function o(){g.position.y=0,g.position.x=0,g.position.z=-150,g.lookAt(new THREE.Vector3),a(),i()}function a(){u=new GPUComputationRenderer(M,M,w);var e=u.createTexture(),n=u.createTexture();r(e,n),v=u.addVariable("textureVelocity",O,n),p=u.addVariable("texturePosition",C,e),u.setVariableDependencies(v,[p,v]),u.setVariableDependencies(p,[p,v]),d=p.material.uniforms,x=v.material.uniforms,p.material.uniforms.time={value:0},v.material.uniforms.time={value:0},v.material.uniforms.t1={value:H.t1},v.material.uniforms.t2={value:H.t2},u.init()}function i(){m=new THREE.BufferGeometry;var e=new Float32Array(3*R);console.log("aaaaa",e.length);for(var n,t,o=.7,a=.1,i=.1,r=[-1,-1,1,1,-1,1,1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,-1,1,-1,-1,1,1,-1,-1,-1,-1,1,1,-1,-1,1,-1,-1,1,-1,-1,1,1,1,1,1,-1,1,-1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,1,1,-1,1,-1,-1,-1,1,-1,1,1,-1,-1,1,-1,-1,1,1,-1,1,1,1,1,-1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,-1,-1,-1,-1,1,1,-1,-1,1],c=0;c<3*R;c+=108){n=.01+2*Math.random(),t=.01+2*Math.random();for(var l=0;l<108;l+=3)e[c+l+0]=r[l+0]*o*n*n*n,e[c+l+1]=r[l+1]*a*t*t*t,e[c+l+2]=r[l+2]*i}for(var u=new Float32Array(2*R),v=0,p=0;p<M;p++)for(var c=0;c<M;c++)u[v++]=c/(M-1),u[v++]=p/(M-1);m.addAttribute("position",new THREE.BufferAttribute(e,3)),m.addAttribute("uv",new THREE.BufferAttribute(u,2)),h={texturePosition:{value:null},textureVelocity:{value:null},cameraConstant:{value:s(g)},invMatrix:{value:new THREE.Matrix4}};var d=new THREE.PointLight(16777215,1);d.position.set(0,0,0),E.add(d);var x=THREE.UniformsUtils.merge([THREE.UniformsLib.lights,h]);f=new THREE.ShaderMaterial({uniforms:x,vertexShader:T,fragmentShader:P,side:THREE.DoubleSide,vertexColors:THREE.VertexColors,transparent:!0,lights:!0}),f.extensions.derivatives=!0,f.extensions.drawBuffers=!0;var y=new THREE.Mesh(m,f);y.matrixAutoUpdate=!1,y.updateMatrix(),E.add(y);var b=new THREE.Matrix4;b.copy(y.matrixWorld),b.multiply(g.matrixWorldInverse);var c=(new THREE.Matrix4).getInverse(b);f.uniforms.invMatrix.value=c}function r(e,n){var t=e.image.data,o=n.image.data;console.log("pos",t.length),console.log("vel",o.length);for(var a=0,i=0,r=t.length;i<r;i+=144){a++;for(var s=200*Math.random()-100,c=200*Math.random()-100,l=200*Math.random()-100,m=1*Math.random()>.5?1:0,u=0;u<144;u+=4)t[i+u+0]=s,t[i+u+1]=c,t[i+u+2]=l,t[i+u+3]=m;m=.5+.5*Math.random();for(var u=0;u<144;u+=4)o[i+u+0]=s,o[i+u+1]=c,o[i+u+2]=l,o[i+u+3]=m}}function s(e){return window.innerHeight/(Math.tan(.5*THREE.Math.DEG2RAD*e.fov)/e.zoom)}function c(){requestAnimationFrame(c),l()}function l(){u.compute(),v.material.uniforms.time.value+=1/60,H.t1+=(V-H.t1)/2e3,H.t2+=(D-H.t2)/2e3,v.material.uniforms.t1.value=H.t1,v.material.uniforms.t2.value=H.t2,L+=1,L>120&&(L=0,V=1+10*Math.random(),D=1+10*Math.random()),f.uniforms.texturePosition.value=u.getCurrentRenderTarget(p).texture,f.uniforms.textureVelocity.value=u.getCurrentRenderTarget(v).texture,w.render(E,g)}var m,u,v,p,d,x,h,f,y=e("./lib/createThree"),b=y(),g=b.camera,E=b.scene,w=b.renderer,z=(b.controls,e("glslify")),P=z(["precision highp float;\n#define GLSLIFY 1\n\nstruct PointLight {\n  vec3 position;\n  vec3 color;\n  float distance;\n};\nuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\nuniform mat4 invMatrix;\n\n// VertexShaderから受け取った色を格納するだけ。\nvarying vec3 vPosition;\nvarying vec4 vColor;\nvarying vec2 vUv;\n\nvoid main() {\n\n    // 丸い形に色をぬるための計算\n//    float f = length( gl_PointCoord - vec2( 0.5, 0.5 ) );\n//    if ( f > 0.1 ) {\n//        discard;\n//    }\n\n    vec3 dx = dFdx(vPosition.xyz);\n    vec3 dy = dFdy(vPosition.xyz);\n    vec3 fnormal = normalize(cross(normalize(dx), normalize(dy)));\n\n    vec3 lightPos = pointLights[0].position;\n    vec3 lightDirection = normalize( vPosition - lightPos );\n\n    vec3 invLight = normalize(invMatrix * vec4(lightDirection, 0.0)).xyz;\n    float diffuse  = clamp(dot(fnormal, invLight), 0.0, 1.0);\n\n    vUv;\n    vColor;\n    vPosition;\n\n//    gl_FragColor = vColor;\n    gl_FragColor = vColor * vec4(vec3(diffuse), 1.0);\n\n}"]),T=z(["#define GLSLIFY 1\n#include <common>\n\nuniform sampler2D texturePosition;\nuniform sampler2D textureVelocity;\nuniform float cameraConstant;\nuniform mat4 invMatrix;\nuniform float density;\n\nvarying vec3 vPosition;\nvarying vec4 vColor;\nvarying vec2 vUv;\nuniform float radius;\n\nvoid main() {\n\n    vec3 velTemp = normalize(texture2D( textureVelocity, uv )).xyz;\n    vec4 posTemp = texture2D( texturePosition, uv );\n\n    vec3 pos = posTemp.xyz;\n    vec3 newPosition = position;\n\n    newPosition = mat3( modelMatrix ) * newPosition;\n\n    // rotatoin\n    velTemp.z *= -1.;\n    float xz = length( velTemp.xz );\n    float xyz = 1.;\n    float x = sqrt( 1. - velTemp.y * velTemp.y );\n    float cosry = velTemp.x / xz;\n    float sinry = velTemp.z / xz;\n    float cosrz = x / xyz;\n    float sinrz = velTemp.y / xyz;\n    mat3 maty =  mat3(\n      cosry, 0, -sinry,\n      0    , 1, 0     ,\n      sinry, 0, cosry\n    );\n    mat3 matz =  mat3(\n      cosrz , sinrz, 0,\n      -sinrz, cosrz, 0,\n      0     , 0    , 1\n    );\n\n    newPosition = maty * matz * newPosition;\n    newPosition += pos;\n\n//    pos += position;\n\n    // ポイントのサイズを決定\n    //vec4 mvPosition = modelViewMatrix * vec4( pos, 1.0 );\n    //gl_PointSize = 16.0;//0.5 * cameraConstant / ( - mvPosition.z );\n\n    // uv情報の引き渡し\n    vUv = uv;\n\n    // 変換して格納\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n    vPosition = newPosition;\n\n    vColor = vec4( 247.0/255.0, 40.0/255.0, 92.0/255.0, 1.0 ) * posTemp.w +\n             vec4( 52.0/255.0, 38.0/255.0, 91.0/255.0, 1.0 ) * (1.0 - posTemp.w);\n\n}"]),C=z(["#define GLSLIFY 1\n#define delta ( 1.0 / 60.0 )\n#define area 30.0\n\nvoid main() {\n\n  vec2 uv = gl_FragCoord.xy / resolution.xy;\n  vec4 tmpPos = texture2D( texturePosition, uv );\n  vec4 tmpVel = texture2D( textureVelocity, uv );\n\n  vec3 pos = tmpPos.xyz;\n  vec3 vel = tmpVel.xyz;\n\n  // Dynamics\n  pos += vel;// * delta;\n\n  pos.x>area?pos=vec3(pos.x-area*1.0, pos.y         , pos.z         ):vec3(0.0);\n  pos.y>area?pos=vec3(pos.x         , pos.y-area*1.0, pos.z         ):vec3(0.0);\n  pos.z>area*2.0?pos=vec3(pos.x         , pos.y         , pos.z-area*4.0):vec3(0.0);\n\n  pos.x<-area?pos=vec3(pos.x+area*1.0, pos.y         , pos.z         ):vec3(0.0);\n  pos.y<-area?pos=vec3(pos.x         , pos.y+area*1.0, pos.z         ):vec3(0.0);\n  pos.z<-area*2.0?pos=vec3(pos.x         , pos.y         , pos.z+area*4.0):vec3(0.0);\n\n//  pos.x>area?pos=vec3(pos.x-area*1.0, pos.y         , pos.z     ):vec3(0.0);\n//  pos.y>area?pos=vec3(pos.x         , pos.y-area*1.0, pos.z     ):vec3(0.0);\n//  pos.z>area?pos=vec3(pos.x         , pos.y         , pos.z-area):vec3(0.0);\n//\n//  pos.x<-area?pos=vec3(pos.x+area*1.0, pos.y         , pos.z     ):vec3(0.0);\n//  pos.y<-area?pos=vec3(pos.x         , pos.y+area*1.0, pos.z     ):vec3(0.0);\n//  pos.z<-area?pos=vec3(pos.x         , pos.y         , pos.z+area*1.0):vec3(0.0);\n\n  gl_FragColor = vec4( pos, tmpPos.w );\n\n}"]),O=z(["#define GLSLIFY 1\n// For PI declaration:\n#include <common>\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\nuniform float time;\nuniform float t1;\nuniform float t2;\n\nfloat maxspeed = 5.0;\nfloat maxforce = 0.5;\n\nfloat speed = 0.3;\n\nfloat magSq(vec3 vec) {\n  return (vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);\n}\n\nvec3 limit(vec3 vec, float max) {\n  if (magSq(vec) > max*max) {\n    vec = normalize(vec);\n    vec *= max;\n  }\n  return vec;\n}\n\nvoid main() {\n\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n    float idParticle = uv.y * resolution.x + uv.x;\n\n    vec4 tmpVel = texture2D( textureVelocity, uv );\n    vec4 tmpPos = texture2D( texturePosition, uv );\n\n    vec3 vel = vec3(tmpVel.zzw) * speed;\n\n//    speed += sin(time)*0.2;\n\n    //vec3 vel = tmpVel.xyz * snoise(tmpPos.xyz)*1.0;\n\n//    vec3 central = vec3( 0., 0., 0. );\n//\t\tvec3 dir = tmpPos.xyz - central;\n\n    float theta = snoise( tmpPos.xyz * (0.019 + cos(time)*0.01) )*6.28;\n    vel += vec3( cos(theta), sin(theta), 0.0 ) * speed;\n\n//    if ( length( vel ) > 200.0 ) {\n//\t\t\t\tvel = normalize( vel ) * 100.0;\n//\t\t}\n\n//    vec3 target = vec3( 100.*cos(t1*time+tmpVel.w*6.28), 100.*sin(t2*time+tmpVel.w*6.28), tmpPos.w*2.0-1.0);\n//    vec3 target = vec3( 100.*cos(time+tmpVel.w*6.28), 100.*sin(time+tmpVel.w*6.28), tmpPos.w*0.2-0.1);\n\n//    target += tmpVel.www * 0.00001;\n//    maxspeed += tmpPos.w * tmpVel.w *0.002;\n//    maxforce += tmpPos.w * tmpVel.w *0.1;\n\n//    vec3 desired = target - tmpPos.xyz;\n//    desired = normalize(desired) * maxspeed;\n//    vec3 vel = desired - vec3(0.1,0.1,0.1);\n\n//    vel *= 3.0;\n\n//    vel -= normalize( dir )*0.1;\n//        vel *= vec3(\n//          snoise(tmpPos.xxx),\n//          snoise(tmpPos.yyy),\n//          snoise(tmpPos.zzz)\n//        )*2.0;\n\n//    vel = limit(vel, maxforce);\n\n//    vel += vec3(\n//      snoise(tmpPos.xxx),\n//      snoise(tmpPos.yyy),\n//      snoise(tmpPos.zzz)\n//    )*1.0;\n\n    gl_FragColor = vec4( vel.xyz, tmpVel.w );\n}"]),M=1024,R=M*M,L=0,V=1,D=1,H={t1:3,t2:2};o(),c()},{"./lib/createThree":1,glslify:3}],3:[function(e,n,t){n.exports=function(e){"string"==typeof e&&(e=[e]);for(var n=[].slice.call(arguments,1),t=[],o=0;o<e.length-1;o++)t.push(e[o],n[o]||"");return t.push(e[o]),t.join("")}},{}],4:[function(e,n,t){n.exports=function(e){function n(n,t){function o(){return 2*Math.PI/60/60*j.autoRotateSpeed}function a(){return Math.pow(.95,j.zoomSpeed)}function i(e){_.theta-=e}function r(e){_.phi-=e}function s(n){j.object instanceof e.PerspectiveCamera?Y/=n:j.object instanceof e.OrthographicCamera?(j.object.zoom=Math.max(j.minZoom,Math.min(j.maxZoom,j.object.zoom*n)),j.object.updateProjectionMatrix(),G=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),j.enableZoom=!1)}function c(n){j.object instanceof e.PerspectiveCamera?Y*=n:j.object instanceof e.OrthographicCamera?(j.object.zoom=Math.max(j.minZoom,Math.min(j.maxZoom,j.object.zoom/n)),j.object.updateProjectionMatrix(),G=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),j.enableZoom=!1)}function l(e){q.set(e.clientX,e.clientY)}function m(e){J.set(e.clientX,e.clientY)}function u(e){W.set(e.clientX,e.clientY)}function v(e){X.set(e.clientX,e.clientY),B.subVectors(X,q);var n=j.domElement===document?j.domElement.body:j.domElement;i(2*Math.PI*B.x/n.clientWidth*j.rotateSpeed),r(2*Math.PI*B.y/n.clientHeight*j.rotateSpeed),q.copy(X),j.update()}function p(e){$.set(e.clientX,e.clientY),ee.subVectors($,J),ee.y>0?s(a()):ee.y<0&&c(a()),J.copy($),j.update()}function d(e){K.set(e.clientX,e.clientY),Q.subVectors(K,W),oe(Q.x,Q.y),W.copy(K),j.update()}function x(e){}function h(e){e.deltaY<0?c(a()):e.deltaY>0&&s(a()),j.update()}function f(e){switch(e.keyCode){case j.keys.UP:oe(0,j.keyPanSpeed),j.update();break;case j.keys.BOTTOM:oe(0,-j.keyPanSpeed),j.update();break;case j.keys.LEFT:oe(j.keyPanSpeed,0),j.update();break;case j.keys.RIGHT:oe(-j.keyPanSpeed,0),j.update()}}function y(e){q.set(e.touches[0].pageX,e.touches[0].pageY)}function b(e){var n=e.touches[0].pageX-e.touches[1].pageX,t=e.touches[0].pageY-e.touches[1].pageY,o=Math.sqrt(n*n+t*t);J.set(0,o)}function g(e){W.set(e.touches[0].pageX,e.touches[0].pageY)}function E(e){X.set(e.touches[0].pageX,e.touches[0].pageY),B.subVectors(X,q);var n=j.domElement===document?j.domElement.body:j.domElement;i(2*Math.PI*B.x/n.clientWidth*j.rotateSpeed),r(2*Math.PI*B.y/n.clientHeight*j.rotateSpeed),q.copy(X),j.update()}function w(e){var n=e.touches[0].pageX-e.touches[1].pageX,t=e.touches[0].pageY-e.touches[1].pageY,o=Math.sqrt(n*n+t*t);$.set(0,o),ee.subVectors($,J),ee.y>0?c(a()):ee.y<0&&s(a()),J.copy($),j.update()}function z(e){K.set(e.touches[0].pageX,e.touches[0].pageY),Q.subVectors(K,W),oe(Q.x,Q.y),W.copy(K),j.update()}function P(e){}function T(e){if(j.enabled!==!1){if(e.preventDefault(),e.button===j.mouseButtons.ORBIT){if(j.enableRotate===!1)return;l(e),F=U.ROTATE}else if(e.button===j.mouseButtons.ZOOM){if(j.enableZoom===!1)return;m(e),F=U.DOLLY}else if(e.button===j.mouseButtons.PAN){if(j.enablePan===!1)return;u(e),F=U.PAN}F!==U.NONE&&(document.addEventListener("mousemove",C,!1),document.addEventListener("mouseup",O,!1),j.dispatchEvent(S))}}function C(e){if(j.enabled!==!1)if(e.preventDefault(),F===U.ROTATE){if(j.enableRotate===!1)return;v(e)}else if(F===U.DOLLY){if(j.enableZoom===!1)return;p(e)}else if(F===U.PAN){if(j.enablePan===!1)return;d(e)}}function O(e){j.enabled!==!1&&(x(e),document.removeEventListener("mousemove",C,!1),document.removeEventListener("mouseup",O,!1),j.dispatchEvent(N),F=U.NONE)}function M(e){j.enabled===!1||j.enableZoom===!1||F!==U.NONE&&F!==U.ROTATE||(e.preventDefault(),e.stopPropagation(),h(e),j.dispatchEvent(S),j.dispatchEvent(N))}function R(e){j.enabled!==!1&&j.enableKeys!==!1&&j.enablePan!==!1&&f(e)}function L(e){if(j.enabled!==!1){switch(e.touches.length){case 1:if(j.enableRotate===!1)return;y(e),F=U.TOUCH_ROTATE;break;case 2:if(j.enableZoom===!1)return;b(e),F=U.TOUCH_DOLLY;break;case 3:if(j.enablePan===!1)return;g(e),F=U.TOUCH_PAN;break;default:F=U.NONE}F!==U.NONE&&j.dispatchEvent(S)}}function V(e){if(j.enabled!==!1)switch(e.preventDefault(),e.stopPropagation(),e.touches.length){case 1:if(j.enableRotate===!1)return;if(F!==U.TOUCH_ROTATE)return;E(e);break;case 2:if(j.enableZoom===!1)return;if(F!==U.TOUCH_DOLLY)return;w(e);break;case 3:if(j.enablePan===!1)return;if(F!==U.TOUCH_PAN)return;z(e);break;default:F=U.NONE}}function D(e){j.enabled!==!1&&(P(e),j.dispatchEvent(N),F=U.NONE)}function H(e){e.preventDefault()}this.object=n,this.domElement=void 0!==t?t:document,this.enabled=!0,this.target=new e.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-(1/0),this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={ORBIT:e.MOUSE.LEFT,ZOOM:e.MOUSE.MIDDLE,PAN:e.MOUSE.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return k.phi},this.getAzimuthalAngle=function(){return k.theta},this.reset=function(){j.target.copy(j.target0),j.object.position.copy(j.position0),j.object.zoom=j.zoom0,j.object.updateProjectionMatrix(),j.dispatchEvent(A),j.update(),F=U.NONE},this.update=function(){var t=new e.Vector3,a=(new e.Quaternion).setFromUnitVectors(n.up,new e.Vector3(0,1,0)),r=a.clone().inverse(),s=new e.Vector3,c=new e.Quaternion;return function(){var e=j.object.position;return t.copy(e).sub(j.target),t.applyQuaternion(a),k.setFromVector3(t),j.autoRotate&&F===U.NONE&&i(o()),k.theta+=_.theta,k.phi+=_.phi,k.theta=Math.max(j.minAzimuthAngle,Math.min(j.maxAzimuthAngle,k.theta)),k.phi=Math.max(j.minPolarAngle,Math.min(j.maxPolarAngle,k.phi)),k.makeSafe(),k.radius*=Y,k.radius=Math.max(j.minDistance,Math.min(j.maxDistance,k.radius)),j.target.add(Z),t.setFromSpherical(k),t.applyQuaternion(r),e.copy(j.target).add(t),j.object.lookAt(j.target),j.enableDamping===!0?(_.theta*=1-j.dampingFactor,_.phi*=1-j.dampingFactor):_.set(0,0,0),Y=1,Z.set(0,0,0),!!(G||s.distanceToSquared(j.object.position)>I||8*(1-c.dot(j.object.quaternion))>I)&&(j.dispatchEvent(A),s.copy(j.object.position),c.copy(j.object.quaternion),G=!1,!0)}}(),this.dispose=function(){j.domElement.removeEventListener("contextmenu",H,!1),j.domElement.removeEventListener("mousedown",T,!1),j.domElement.removeEventListener("wheel",M,!1),j.domElement.removeEventListener("touchstart",L,!1),j.domElement.removeEventListener("touchend",D,!1),j.domElement.removeEventListener("touchmove",V,!1),document.removeEventListener("mousemove",C,!1),document.removeEventListener("mouseup",O,!1),window.removeEventListener("keydown",R,!1)};var j=this,A={type:"change"},S={type:"start"},N={type:"end"},U={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},F=U.NONE,I=1e-6,k=new e.Spherical,_=new e.Spherical,Y=1,Z=new e.Vector3,G=!1,q=new e.Vector2,X=new e.Vector2,B=new e.Vector2,W=new e.Vector2,K=new e.Vector2,Q=new e.Vector2,J=new e.Vector2,$=new e.Vector2,ee=new e.Vector2,ne=function(){var n=new e.Vector3;return function(e,t){n.setFromMatrixColumn(t,0),n.multiplyScalar(-e),Z.add(n)}}(),te=function(){var n=new e.Vector3;return function(e,t){n.setFromMatrixColumn(t,1),n.multiplyScalar(e),Z.add(n)}}(),oe=function(){var n=new e.Vector3;return function(t,o){var a=j.domElement===document?j.domElement.body:j.domElement;if(j.object instanceof e.PerspectiveCamera){var i=j.object.position;n.copy(i).sub(j.target);var r=n.length();r*=Math.tan(j.object.fov/2*Math.PI/180),ne(2*t*r/a.clientHeight,j.object.matrix),te(2*o*r/a.clientHeight,j.object.matrix)}else j.object instanceof e.OrthographicCamera?(ne(t*(j.object.right-j.object.left)/j.object.zoom/a.clientWidth,j.object.matrix),te(o*(j.object.top-j.object.bottom)/j.object.zoom/a.clientHeight,j.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),j.enablePan=!1)}}();j.domElement.addEventListener("contextmenu",H,!1),j.domElement.addEventListener("mousedown",T,!1),j.domElement.addEventListener("wheel",M,!1),j.domElement.addEventListener("touchstart",L,!1),j.domElement.addEventListener("touchend",D,!1),j.domElement.addEventListener("touchmove",V,!1),window.addEventListener("keydown",R,!1),this.update()}return n.prototype=Object.create(e.EventDispatcher.prototype),n.prototype.constructor=n,Object.defineProperties(n.prototype,{center:{get:function(){return console.warn("THREE.OrbitControls: .center has been renamed to .target"),this.target}},noZoom:{get:function(){return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(e){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!e}},noRotate:{get:function(){return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(e){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!e}},noPan:{get:function(){return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(e){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!e}},noKeys:{get:function(){return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(e){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!e}},staticMoving:{get:function(){return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.enableDamping},set:function(e){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.enableDamping=!e}},dynamicDampingFactor:{get:function(){return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor},set:function(e){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor=e}}}),n}},{}]},{},[2]);
